{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\raxem\\\\Desktop\\\\HomeWork\\\\pokemonreact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\raxem\\\\Desktop\\\\HomeWork\\\\pokemonreact\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport PokemonList from \"./PokemonList\";\nimport axios from 'axios';\nimport { returnStatement } from '@babel/types';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        pokemon = _useState2[0],\n        setPokemon = _useState2[1];\n\n  const _useState3 = useState(\"https://pokeapi.co/api/v2/pokemon\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentPageUrl = _useState4[0],\n        setCurrentPageUrl = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        nextPageUrl = _useState6[0],\n        setNextPageUrl = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        prevPageUrl = _useState8[0],\n        setPrevPageUrl = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loading = _useState10[0],\n        setLoading = _useState10[1];\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(currentPageUrl).then(res => {\n      setLoading(false);\n      setNextPageUrl(res.data.next);\n      setPrevPageUrl(res.data.previous);\n      setPokemon(res.data.results.map(p => p.name));\n    });\n    return () => {};\n  }, [currentPageUrl]);\n  if (loading) return \"Loading...\";\n  return React.createElement(PokemonList, {\n    pokemon: pokemon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\raxem\\Desktop\\HomeWork\\pokemonreact\\src\\App.js"],"names":["React","useState","useEffect","PokemonList","axios","returnStatement","App","pokemon","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","get","then","res","data","next","previous","results","map","p","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACiBL,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,QACNM,OADM;AAAA,QACGC,UADH;;AAAA,qBAE+BP,QAAQ,CAAC,mCAAD,CAFvC;AAAA;AAAA,QAENQ,cAFM;AAAA,QAEUC,iBAFV;;AAAA,qBAGyBT,QAAQ,EAHjC;AAAA;AAAA,QAGNU,WAHM;AAAA,QAGOC,cAHP;;AAAA,qBAIyBX,QAAQ,EAJjC;AAAA;AAAA,QAINY,WAJM;AAAA,QAIOC,cAJP;;AAAA,qBAKiBb,QAAQ,CAAC,IAAD,CALzB;AAAA;AAAA,QAKNc,OALM;AAAA,QAKGC,UALH;;AAObd,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAUR,cAAV,EAA4BS,IAA5B,CAAiCC,GAAG,IAAI;AACtCH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAd;AACAP,MAAAA,cAAc,CAACK,GAAG,CAACC,IAAJ,CAASE,QAAV,CAAd;AACAd,MAAAA,UAAU,CAACW,GAAG,CAACC,IAAJ,CAASG,OAAT,CAAiBC,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,IAA5B,CAAD,CAAV;AACH,KALC;AAOA,WAAO,MAAM,CAEZ,CAFD;AAGD,GAZQ,EAYN,CAACjB,cAAD,CAZM,CAAT;AAcA,MAAIM,OAAJ,EAAa,OAAO,YAAP;AAEb,SACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAER,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAGD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PokemonList from \"./PokemonList\";\nimport axios from 'axios';\nimport { returnStatement } from '@babel/types';\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    axios.get(currentPageUrl, ).then(res => {\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name))\n  })\n\n    return () => {\n\n    }\n  }, [currentPageUrl])\n\n  if (loading) return \"Loading...\"\n\n  return (\n   <PokemonList pokemon={pokemon} />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}